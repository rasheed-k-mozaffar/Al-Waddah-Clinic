@page "/appointments"
@attribute [Authorize(Roles = "Admin")]

@if (_isBusy == true)
{
    <MudGrid Class="d-flex justify-center" Style="height: 100vh; align-items: center;">
        <MudItem>
            <Loader />
        </MudItem>
    </MudGrid>
}
else
{
    <MudContainer Class="mt-5">
        <MudText Typo="Typo.h4" Class="mb-3"><b>@Lang.Keys["Appointments:Title"]</b></MudText>
        <MudTabs Elevation="2"  ApplyEffectsToContainer="true" PanelClass="pa-6" Centered="true">
            <MudTabPanel Text="@(Lang.Keys["Appointments:Upcoming"] + $" ({upcoming.Count})")" Icon="@Icons.Material.Filled.Upcoming"
                         BadgeColor="Color.Primary" BadgeDot="true">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;" Dense="true">
                        <thead>
                            <tr>
                                <th>@Lang.Keys["Appointments:PatientName"]</th>
                                <th>@Lang.Keys["Appointments:Time"]</th>
                                <th style="text-align: end;">@Lang.Keys["Appointments:Options"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in upcoming)
                            {
                                <tr>
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    <td style="text-align: end;">
                                        <MudButton Variant="Variant.Text" Color="Color.Error" @onclick='(async () => await OpenRemoveDialog(appointment.Id))' StartIcon="@Icons.Material.Filled.Delete">@Lang.Keys["Appointments:Remove"]</MudButton>
                                        <MudButton Variant="Variant.Text" Color="Color.Secondary" @onclick='(() => GoToUpdateAppointment(appointment.PatientName , appointment.Id))' StartIcon="@Icons.Material.Filled.CalendarToday">@Lang.Keys["Appointments:Reschedule"]</MudButton>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>

            <MudTabPanel Text="@(Lang.Keys["Appointments:Unchecked"] + $" ({unnoted.Count})")" Icon="@Icons.Material.Filled.Info"
                         BadgeColor="Color.Info" BadgeDot="true">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;" Dense="true">
                        <thead>
                            <tr>
                                <th>@Lang.Keys["Appointments:PatientName"]</th>
                                <th>@Lang.Keys["Appointments:Time"]</th>
                                <th style="text-align: end;">@Lang.Keys["Appointments:Options"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in unnoted)
                            {
                                <tr>
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    <td style="text-align: end;">
                                                   <MudButton Variant="Variant.Text" Color="Color.Error" @onclick='(async () => await OpenRemoveDialog(appointment.Id))' StartIcon="@Icons.Material.Filled.Delete">@Lang.Keys["Appointments:Remove"]</MudButton>

                                                   <MudButton Variant="Variant.Filled" Color="Color.Info"
                                                              @onclick='(() => OpenActionDialog(appointment.PatientId, appointment.Id))' StartIcon="@Icons.Material.Filled.PendingActions">@Lang.Keys["Appointments:Action"]</MudButton>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>

            <MudTabPanel Text="@(Lang.Keys["Appointments:Completed"] + $" ({completed.Count})")" Icon="@Icons.Material.Filled.Done"
                         BadgeColor="Color.Success" BadgeDot="true">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;" Dense="true">
                        <thead>
                            <tr>
                                <th>@Lang.Keys["Appointments:PatientName"]</th>
                                <th>@Lang.Keys["Appointments:Time"]</th>
                                <th style="text-align: end;">@Lang.Keys["Appointments:Options"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in completed)
                            {
                                <tr>
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    <td style="text-align: end;">
                                        <MudButton Variant="Variant.Text" Color="Color.Error" @onclick='(async () => await OpenRemoveDialog(appointment.Id))' StartIcon="@Icons.Material.Filled.Delete">@Lang.Keys["Appointments:Remove"]</MudButton>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>

            <MudTabPanel Text="@(Lang.Keys["Appointments:Missed"] + $" ({missed.Count})")" Icon="@Icons.Material.Filled.Cancel"
                         BadgeColor="Color.Error" BadgeDot="true">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;" Dense="true">
                        <thead>
                            <tr>
                                <th>@Lang.Keys["Appointments:PatientName"]</th>
                                <th>@Lang.Keys["Appointments:Time"]</th>
                                <th style="text-align: end;">@Lang.Keys["Appointments:Options"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in missed)
                            {
                                <tr>
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    <td style="text-align: end;">
                                        <MudButton Variant="Variant.Text" Color="Color.Error" @onclick='(async () => await OpenRemoveDialog(appointment.Id))' StartIcon="@Icons.Material.Filled.Delete">@Lang.Keys["Appointments:Remove"]</MudButton>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>
        </MudTabs>
    </MudContainer>

}

@code {
    protected override void OnInitialized()
    {
        Lang.InitLocalizedComponent(this);
    }
}