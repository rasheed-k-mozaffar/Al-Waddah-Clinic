@page "/appointments"
@attribute [Authorize(Roles = "Admin")]

@if (_isBusy == true)
{
    <MudGrid Class="d-flex justify-center" Style="height: 100vh; align-items: center;">
        <MudItem>
            <Loader />
        </MudItem>
    </MudGrid>
}
else
{
    <MudContainer Class="mt-5">
        <MudText Typo="Typo.h4" Class="mb-3"><b>Appointments</b></MudText>
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
            <MudTabPanel Text="Upcoming">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;">
                        <thead>
                            <tr>
                                <th>Patient's Name</th>
                                <th>Appointment Day</th>
                                <th style="text-align: end;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in appointments.Where(a => a.StartAt.Value > DateTime.Now.AddMinutes(-1)).OrderBy(a => a.StartAt.Value - DateTime.Now))
                            {
                                <tr>
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    <td style="text-align: end;">
                                        <MudButton Variant="Variant.Text" Color="Color.Error" @onclick='(async () => await OpenRemoveDialog(appointment.Id))'><i class="bi bi-trash-fill"></i> &nbsp;Remove </MudButton>
                                        <MudButton Variant="Variant.Text" Color="Color.Secondary" @onclick='(() => GoToUpdateAppointment(appointment.PatientName , appointment.Id))'><i class="bi bi-calendar-week-fill"></i> &nbsp;Reschedule </MudButton>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>

            <MudTabPanel Text="Overdue" BadgeData="@_actionsRequired" BadgeColor="Color.Warning">
                <MudContainer Class="mt-5">
                    <MudSimpleTable Style="overflow-x: auto;">
                        <thead>
                            <tr>
                                <th>Patient's Name</th>
                                <th>Appointment Day</th>
                                <th style="text-align: end;">Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in appointments.Where(a => a.StartAt.Value < DateTime.Now.AddMinutes(-1)).OrderBy(a => a.StartAt.Value - DateTime.Now))
                            {
                                <tr style="border: @(!appointment.Status.HasValue ? "3px solid gold" : "none") ">
                                    <td>@appointment.PatientName</td>
                                    <td>@appointment.StartAt</td>
                                    @if (appointment.Status == null)
                                    {
                                        <td style="text-align: end;">
                                            <MudButton Color="Color.Warning" Variant="Variant.Filled" OnClick='(() => OpenActionDialog(appointment.PatientId, appointment.Id))'>Action Required</MudButton>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>@appointment.Status.ToString()</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </MudSimpleTable>
                </MudContainer>
            </MudTabPanel>
        </MudTabs>
    </MudContainer>

}